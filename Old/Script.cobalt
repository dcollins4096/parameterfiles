#!/bin/csh
#
#  Sample Batch Script for a SGI Altix MPI job
#
#  Submit this script using the command: qsub mpi.pbs
#
#  Use the "qstat" command to check the status of a job.
#
# The following are embedded QSUB options. The syntax is #PBS (the # does
# _not_ denote that the lines are commented out so do not remove).
#
# 
# Set maximum wallclock time to 30 minutes (hh:mm:ss)
#PBS -l walltime=00:10:00

# Set memory limit to 500 Mbytes
#PBS -l mem=500mb

# Request 4 processors
#PBS -l ncpus=1

# Queue name (see info about other queues in web documentation)
#PBS -q standard
#
# Export all my environment variables to the job
#PBS -V
#
# Charge job to project abc (recommended for users with multiple projects)
# [If project is invalid, a valid project will be automatically selected]
####PBS -A abc
# 
# Job name (default = name of script file)
####PBS -N testjob
#
# Filename for standard output (default = <job_name>.o<job_id>)
####PBS -o testjob.out
#
# Filename for standard error (default = <job_name>.e<job_id>)
#######PBS -e testjob.err
# 
# Send mail when the job begins and ends (optional)
#PBS -m be
#------------------------------
# End of embedded QSUB options

set Dir = /scratch/users/dcollins/Drive64L0/
set job = "$Dir"go.enzo
cd $Dir

mpirun -np $NCPUS $job

#All the shit below is an example of how to read and write from Unitree.



#set echo               # echo commands before execution; use for debugging

# Go to the job scratch directory
#  cd $SCR

# tar up output files and save them on UniTree after the job is completed
# (We assume that subdirectory "dir2" has already been created.)

#  setenv MyName Drive64L0

#  saveafterjob "cd $MyName, tar cf $MyName.tar *"
#
# Get files su3_rmd-pt and input.8.10 from directory in UniTree
#  msscmd get enzo.exe, cd $MyName,mget *

# chmod u+x enzo.exe # Since UniTree gives you the same permissions as 
                     # what your umask is set to (generally only read 
                     # and write), you need to give yourself
                     # executable permission to run su3_rmd-pt

# Run the MPI program on all nodes/processors requested by the job
# (program reads from input.8.10 and writes to output.8.10)


#mpirun -np $NCPUS enzo.exe -d TurbulenceSimulation64L0

