#!/bin/tcsh
#----------------------------------------------------
# Example SLURM job script to run multiple mpi
# applications within one batch job on TACC's
# Stampede system.
#----------------------------------------------------
#SBATCH -J u05     # Job name
#SBATCH -o u05.o%j # Name of stdout output file(%j expands to jobId)
#SBATCH -e u05.o%j # Name of stderr output file(%j expands to jobId)
#SBATCH -p normal          # Submit to the 'normal' or 'development' queue
#SBATCH -N 2                    # Total number of nodes requested (16 cores/node)
#SBATCH -n 16                   # Total number of mpi tasks requested
#SBATCH -t 24:00:00             # Run time (hh:m) - 1.5 hours
#SBATCH --tasks-per-node 8
#SBATCH --mail-user=dcollins4096@gmail.com
#SBATCH --mail-type=begin  # email me when the job starts
#SBATCH --mail-type=end    # email me when the job finishes
# The next line is required if the user has more than one project
#SBATCH -A TG-AST140008      # Allocation name to charge job against

# This example will run 3 MPI applications using 32 tasks,
# 16 tasks, and 16 tasks

#DO NOT use tacc_affinity with multiple MPI applications
# within the same batch script!
# If running in a hybrid mode, please contact the help desk
# for support.

# Launch each MPI application using the "-o" and "-n" flags
# in the background
#Application 1
set echo
module load hdf5
set restart = `tail -1 OutputLog | awk '{print $3}'`
set last_restart = "first"
set nRestart = 0

while ( 1 )

@ nRestart = $nRestart + 1
  echo "SCRIPT $nRestart : loop" $restart $last_restart

  if ( $restart != $last_restart ) then
    set last_restart = $restart
    echo "SCRIPT $nRestart : starting" $restart
    ibrun -o 0 -n 16 ./enzo.exe -r $restart
    echo "SCRIPT $nRestart : set restart"
    set restart = `tail -1 OutputLog | awk '{print $3}'`
    echo "SCRIPT $nRestart : set restart", $restart
    restarter StopCycle 100
    echo "SCRIPT $nRestart : restarted"
  else
    echo "SCRIPT: no restart.  Restart $restart, last $last_restart"
    break
  endif
 

end

